
    # This is a basic workflow to help you get started with Actions

    name: CI

    # Controls when the workflow will run
    on:
      # Allows you to run this workflow manually from the Actions tab
      workflow_dispatch:
      push:
        branches: [ main, master ]
      pull_request:
        branches: [ main, master ]

    # A workflow run is made up of one or more jobs that can run sequentially or in parallel
    jobs:
      # This workflow contains a single job called "build"
      build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        timeout-minutes: 30

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
          - uses: actions/checkout@v3

          - name: Set up Python 3.12.5
            uses: actions/setup-python@v3
            with:
              python-version: "3.12.5"

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install pipenv
              pipenv install --system
              playwright install firefox

          - name: Run tests
            run: pytest --browser_name=firefox --alluredir=./reports --clean-alluredir

          - name: Allure Report action from marketplace
            uses: simple-elf/allure-report-action@master
            if: always()
            #id: allure-report
            with:
              allure_results: reports
              #gh_pages: gh-pages
              #allure_report: allure-report
              allure_history: allure-history
              keep_reports: 20
          - name: Deploy report to Github Pages
            if: always()
            uses: peaceiris/actions-gh-pages@v2
            env:
              PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              PUBLISH_BRANCH: gh-pages
              PUBLISH_DIR: allure-history

          - name: Report Status
            if: always()
            uses: ravsamhq/notify-slack-action@2.5.0
            with:
              status: ${{ job.status }}
              notification_title: "{workflow} has {status_message}"
              message_format: "{emoji} *{workflow}* {status_message}"
              footer: "Linked Repo ${{ secrets.GH_ACTIONS_URL }}|{repo}>"
              notify_when: "success,failure"
            env:
              SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
